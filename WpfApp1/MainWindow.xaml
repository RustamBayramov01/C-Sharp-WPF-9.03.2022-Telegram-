<Window x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        WindowStyle="None"
        Background="Transparent"
        AllowsTransparency="True"
        mc:Ignorable="d" MouseLeftButtonDown="Window_MouseLeftButtonDown" 
        Title="MainWindow" Height="700" Width="1200" MaxHeight="700" MaxWidth="1200">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="White"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="White"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="White"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="White"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="White"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="White"/>
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd"  Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="White"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="White"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="White"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="White"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="White"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="White"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="White"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="White"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="White"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="White"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="White"/>
        <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="false">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    
    </Window.Resources>



    <Border CornerRadius="5" Background="White">
        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="330"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="60"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>








            <ListBoxItem Name="listBoxMargin" Margin="0,20,0,0" Grid.Row="1" Grid.Column="0" Grid.RowSpan="7" Style="{DynamicResource ListBoxItemStyle1}">

                <StackPanel Orientation="Vertical">

                    <StackPanel Name="Ivan"   Orientation="Horizontal" MouseMove="StackPanel_MouseMove" MouseLeave="Ivan_MouseLeave">

                        <Image Source="Image/Ryan-round.png" Height="60" Width="60" Margin="5" MouseLeftButtonDown="Image_MouseLeftButtonDown" ></Image>

                        <StackPanel Name="marginRest1" Margin="20,0,0,0" Orientation="Vertical" Width="220">

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Name="IvanName" Text="Ivan Williams" FontSize="20" Margin="5" FontWeight="Bold"></TextBlock>
                                <TextBlock Name="sonVaxt1" Text="12:00" FontSize="11" Margin="50,12,0,0" FontWeight="Bold"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock  Name="sonMesaj1" Text="Reminds me of a Chinese proverb: the best time to plant a tree was 20 years ago. The Second best time is now." Margin="3,0,0,0" FontSize="15" FontFamily="Comic Sans MS" HorizontalAlignment="Left" Width="175"/>
                                <Image Name="IvanMesaj" Source="Image/blackTelegram.png" Height="16" Width="16" Margin="20,5,0,0"></Image>
                            </StackPanel>

                        </StackPanel>

                    </StackPanel>

                    <StackPanel Name ="Isabel" Orientation="Horizontal" MouseMove="Isabel_MouseMove" MouseLeave="Isabel_MouseLeave">

                        <Image Source="Image/user-avatar-1 (1).png" MouseLeftButtonDown="Image_MouseLeftButtonDown_1" Height="60" Width="60" Margin="5"></Image>

                        <StackPanel x:Name="marginRest2" Margin="20,0,0,0" Orientation="Vertical" Width="220">

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Name="IsabelName" Text="Isabel Walker" FontSize="20" Margin="5" FontWeight="Bold"></TextBlock>
                                <TextBlock Name="sonVaxt2" Text="12:00" FontSize="11" Margin="50,12,0,0" FontWeight="Bold"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock  Name="sonMesaj2" Text="Reminds me of a Chinese proverb: the best time to plant a tree was 20 years ago. The Second best time is now." Margin="3,0,0,0" FontSize="15" FontFamily="Comic Sans MS" HorizontalAlignment="Left" Width="175"/>
                                <Image Name="IsabelMesaj" Source="Image/blackTelegram.png" Height="16" Width="16" Margin="20,5,0,0"></Image>
                            </StackPanel>

                        </StackPanel>

                    </StackPanel>


                    <StackPanel Name ="Tommy" Orientation="Horizontal" MouseMove="Tommy_MouseMove" MouseLeave="Tommy_MouseLeave">

                        <Image Source="Image/round_headshot.png" MouseLeftButtonDown="Image_MouseLeftButtonDown_2" Height="60" Width="60" Margin="5"></Image>

                        <StackPanel x:Name="marginRest3" Margin="20,0,0,0" Orientation="Vertical" Width="220">

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Name="TommyName" Text="Tommy Gordon" FontSize="20" Margin="5" FontWeight="Bold"></TextBlock>
                                <TextBlock Name="sonVaxt3" Text="12:00" FontSize="11" Margin="30,12,0,0" FontWeight="Bold"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Name="sonMesaj3" Text="Reminds me of a Chinese proverb: the best time to plant a tree was 20 years ago. The Second best time is now." Margin="3,0,0,0" FontSize="15" FontFamily="Comic Sans MS" HorizontalAlignment="Left" Width="175"/>
                                <Image Name="TommyMesaj" Source="Image/blackTelegram.png" Height="16" Width="16" Margin="20,5,0,0"></Image>
                            </StackPanel>

                        </StackPanel>

                    </StackPanel>


                </StackPanel>




            </ListBoxItem>


            <Border Name="burgerCatagoriColor" Background="White" CornerRadius="15" Margin="5,0,265,0" Height="680" Grid.RowSpan="8" Visibility="Hidden">
                <Border Background="White" BorderThickness="2" CornerRadius="15"></Border>
            </Border>

            <Button Name="burgerButton" Height="32" Width="32" Margin="20,20,0,0" HorizontalAlignment="Left" Background="Transparent" Style="{DynamicResource ButtonStyle1}" Click="burgerButton_Click">
                <Image Name="burgerD" Source="Image/menuu.png"/>
            </Button>

            <Button Name="Exit"  Width="32" Height="32" Grid.Row="7" Grid.Column="0" Margin="0,0,260,0" Background="Transparent" Style="{DynamicResource ButtonStyle1}" Visibility="Hidden" Click="Exit_Click">
                <Image Source="Image/log-out.png"/>
            </Button>


            <Border CornerRadius="10" Background="#FFE4E4E4" Grid.Row="0" Margin="70,20,230,0" Grid.ColumnSpan="2"></Border>
            <TextBlock Text="Search" Foreground="#FF2C2929" Background="Transparent" Margin="90,32,0,0"></TextBlock>

            <Border Name="borderXet" Background="Black" Grid.Row="1" Grid.Column="0" Margin="0,10,0,80" Grid.ColumnSpan="5"/>
            <Border Background="Black" Grid.Row="0" Grid.Column="0" Grid.RowSpan="8" Margin="329,0,0,0"></Border>
            <TextBlock Name="User" Text="Telegram" FontWeight="Bold" Grid.Row="0" Grid.Column="1" Margin="20,20,0,0" FontSize="15"></TextBlock>
            <TextBlock Name="onlieStat" Text="" Grid.Row="0" Grid.Column="1" Margin="20,37,0,0" FontSize="15"></TextBlock>

            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="4" Margin="5" HorizontalAlignment="Right">

                <Image Source="Image/searching.png" Width="32" Height="32" Margin="0,15,15,0"/>
                <Image Source="Image/list.png" Width="32" Height="32" Margin="0,15,15,0"/>

            </StackPanel>


            <StackPanel Name="stackPanelMesaj" Orientation="Horizontal" Background="White" Margin="0,35,0,0" Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="4">

                <Button Click="Image" Background="Transparent" Style="{DynamicResource ButtonStyle1}">
                    
                    <Image Source="Image/share.png" Width="32" Height="32" Margin="20,0,0,0" HorizontalAlignment="Left"/>
                    
                </Button>
                
                <TextBox Name="WriteAMessage"  Width="665" FontSize="20" Margin="20,12,10,10" Style="{DynamicResource TextBoxStyle1}" MouseDoubleClick="WriteAMessage_MouseDoubleClick"/>
                <Button x:Name="Send" Click="Send_Click" Margin="0,3,0,0" Width="32" Height="32" Background="Transparent" Style="{DynamicResource ButtonStyle1}">
                    <Image Source="Image/paper-plane32.png"></Image>
                </Button>


                <Button Click="Ifade" Background="Transparent" Style="{DynamicResource ButtonStyle1}">

                    <Image Source="Image/happy.png" Width="32" Height="32" Margin="10,0,0,0" HorizontalAlignment="Left"/>

                </Button>
                

                <Button Click="Sound" Background="Transparent" Style="{DynamicResource ButtonStyle1}">

                    <Image Source="Image/microphone.png" Width="32" Height="32" Margin="5,0,0,0" HorizontalAlignment="Left"/>

                </Button>
                
            </StackPanel>





            <ScrollViewer Name="scrolView"  Grid.Row="1" Grid.Column="1" Grid.RowSpan="7" Grid.ColumnSpan="4" Margin="0,12,0,55">

                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>


                    <ListBox Name="ListBoxYouChat" IsHitTestVisible="False" FontSize="20" Margin="20,10" Grid.Column="0" Style="{DynamicResource ListBoxStyle1}">

                        <StackPanel Width="350" Margin="0,280,0,0" >

                            <local:UserControl1/>

                        </StackPanel>
                        

                    </ListBox>


                    <ListBox Name="ListBoxBootChat" IsHitTestVisible="False"  FontSize="20" Margin="20,10"  Grid.Column="1" Style="{DynamicResource ListBoxStyle1}" HorizontalContentAlignment="Right">

                        <StackPanel  Width="350" Margin="0,0,0,200">

                            <local:UserControl2/>
                          
                            
                        </StackPanel>
                        
                    </ListBox>

                </Grid>



            </ScrollViewer>


            <Border CornerRadius="30" Name="IfadeSlot" Background="#66808080"  Grid.Row="6" Grid.RowSpan="7" Grid.Column="1" Grid.ColumnSpan="4" Margin="20,70,30,60">

                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <Button Name="ifade1" Grid.Column="0" Background="White" Style="{DynamicResource ButtonStyle1}" Click="ifade1_Click">

                        <Image Source="Ifade/ifade1.png" Width="32" Height="32"></Image>
                        
                    </Button>

                    <Button Grid.Column="1" Background="White" Style="{DynamicResource ButtonStyle1}" Click="ifade2_Click">

                        <Image Source="Ifade/ifade2.png" Width="32" Height="32"></Image>

                    </Button>

                    <Button Grid.Column="2" Background="White" Style="{DynamicResource ButtonStyle1}" Click="ifade3_Click">

                        <Image Source="Ifade/ifade3.png" Width="32" Height="32"></Image>

                    </Button>

                    <Button Grid.Column="3" Background="White" Style="{DynamicResource ButtonStyle1}" Click="ifade4_Click">

                        <Image Source="Ifade/ifade4.png" Width="32" Height="32"></Image>

                    </Button>

                    <Button Grid.Column="4" Background="White" Style="{DynamicResource ButtonStyle1}" Click="ifade5_Click">

                        <Image Source="Ifade/ifade5.png" Width="32" Height="32"></Image>

                    </Button>

                    <Button Grid.Column="5" Background="White" Style="{DynamicResource ButtonStyle1}" Click="ifade6_Click">

                        <Image Source="Ifade/ifade6.png" Width="32" Height="32"></Image>

                    </Button>

                    <Button Grid.Column="6" Background="White" Style="{DynamicResource ButtonStyle1}" Click="ifade7_Click">

                        <Image Source="Ifade/ifade7.png" Width="32" Height="32"></Image>

                    </Button>

                    <Button Grid.Column="7" Background="White" Style="{DynamicResource ButtonStyle1}" Click="ifade8_Click">

                        <Image Source="Ifade/ifade8.png" Width="32" Height="32"></Image>

                    </Button>

                    <Button Grid.Column="8" Background="White" Style="{DynamicResource ButtonStyle1}" Click="ifade9_Click">

                        <Image Source="Ifade/ifade9.png" Width="32" Height="32"></Image>

                    </Button>

                    <Button Grid.Column="9" Background="White" Style="{DynamicResource ButtonStyle1}" Click="ifade10_Click">

                        <Image Source="Ifade/ifade10.png" Width="32" Height="32"></Image>

                    </Button>
                    

                </Grid>
                
            </Border>

        </Grid>



    </Border>
</Window>
